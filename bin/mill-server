#!/usr/bin/env node
'use strict';

var colors = require('colors'),
    portfinder = require('portfinder'),
    connect = require('connect'),
    mill = require('../lib/server')
;

var optimist = require('optimist')
.usage('Usage: mill-server [options] command  [command]')
.alias('p', 'port')
.default('p', 7611)
.describe('p', 'Port to use')
.alias('a', 'address')
.default('a', '0.0.0.0')
.describe('a', 'Address to use')
.boolean('s')
.alias('s', 'silent')
.describe('s', 'Suppress log messages from output')
.boolean('h')
.alias('h', 'help')
.describe('h', 'Print this list and exit.');


var argv = optimist.argv,
    nill = function () {},
    log = argv.silent ? nill : console.log
;


if (argv.h || argv._.length === 0) {
  console.log(optimist.help());
  process.exit();
}



function starter(err, port) {
  if (err) {
    throw err;
  }
  var app = connect();
  argv._.forEach(function (plugin) {
      var manifest = mill.load(plugin);
      if (!manifest) {
        manifest = mill.load('mill-' + plugin);
      }
      if (manifest) {
        var route = '/' + manifest.id;
        log('Register '.green + route.blue);
        app.use(route, mill.command(manifest));
      }
      else {
        log('Ignore '.yellow + plugin.red);
      }
    }
  );
  app.listen(port, argv.address);
  log('Starting up mill-server, serving '.yellow
    + argv.address
    + ' on port: '.yellow
    + port.toString().cyan);
  log('Hit CTRL-C to stop the server');
}

if (!argv.port) {
  portfinder.basePort = 8080;
  portfinder.getPort(starter);
}
else {
  starter(null, argv.port);
}
